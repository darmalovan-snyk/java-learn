<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.laidu.learn.mybatis.mapper.AppUserMapper">
  <resultMap id="BaseResultMap" type="org.laidu.learn.mybatis.model.AppUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="register_channel" jdbcType="BIGINT" property="registerChannel" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="id_card_detail_address" jdbcType="VARCHAR" property="idCardDetailAddress" />
    <result column="is_verify_id_card" jdbcType="BIT" property="isVerifyIdCard" />
    <result column="id_card_coverup" jdbcType="VARCHAR" property="idCardCoverup" />
    <result column="id_card_coverdown" jdbcType="VARCHAR" property="idCardCoverdown" />
    <result column="id_card_hold" jdbcType="VARCHAR" property="idCardHold" />
    <result column="is_other_picture_auth" jdbcType="BIT" property="isOtherPictureAuth" />
    <result column="is_bankcard_auth" jdbcType="BIT" property="isBankcardAuth" />
    <result column="signature_pic" jdbcType="VARCHAR" property="signaturePic" />
    <result column="is_additional_auth" jdbcType="BIT" property="isAdditionalAuth" />
    <result column="is_emergency_auth" jdbcType="BIT" property="isEmergencyAuth" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="black_status" jdbcType="INTEGER" property="blackStatus" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="cash_black_status" jdbcType="INTEGER" property="cashBlackStatus" />
    <result column="cash_quota" jdbcType="DECIMAL" property="cashQuota" />
    <result column="frozen_cash_quota" jdbcType="DECIMAL" property="frozenCashQuota" />
    <result column="credit_quota" jdbcType="DECIMAL" property="creditQuota" />
    <result column="frozen_credit_quota" jdbcType="DECIMAL" property="frozenCreditQuota" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.laidu.learn.mybatis.model.AppUser">
    <result column="id_card_police" jdbcType="LONGVARCHAR" property="idCardPolice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, open_id, register_channel, username, id_card, name, id_card_detail_address, is_verify_id_card, 
    id_card_coverup, id_card_coverdown, id_card_hold, is_other_picture_auth, is_bankcard_auth, 
    signature_pic, is_additional_auth, is_emergency_auth, phone, email, address, user_status, 
    create_time, update_time, remark, black_status, audit_time, cash_black_status, cash_quota, 
    frozen_cash_quota, credit_quota, frozen_credit_quota, audit_status
  </sql>
  <sql id="Blob_Column_List">
    id_card_police
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="org.laidu.learn.mybatis.model.AppUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ca_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="org.laidu.learn.mybatis.model.AppUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ca_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ca_app_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ca_app_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.laidu.learn.mybatis.model.AppUser">
    insert into ca_app_user (id, open_id, register_channel, 
      username, id_card, name, 
      id_card_detail_address, is_verify_id_card, id_card_coverup, 
      id_card_coverdown, id_card_hold, is_other_picture_auth, 
      is_bankcard_auth, signature_pic, is_additional_auth, 
      is_emergency_auth, phone, email, 
      address, user_status, create_time, 
      update_time, remark, black_status, 
      audit_time, cash_black_status, cash_quota, 
      frozen_cash_quota, credit_quota, frozen_credit_quota, 
      audit_status, id_card_police)
    values (#{id,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{registerChannel,jdbcType=BIGINT}, 
      #{username,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{idCardDetailAddress,jdbcType=VARCHAR}, #{isVerifyIdCard,jdbcType=BIT}, #{idCardCoverup,jdbcType=VARCHAR}, 
      #{idCardCoverdown,jdbcType=VARCHAR}, #{idCardHold,jdbcType=VARCHAR}, #{isOtherPictureAuth,jdbcType=BIT}, 
      #{isBankcardAuth,jdbcType=BIT}, #{signaturePic,jdbcType=VARCHAR}, #{isAdditionalAuth,jdbcType=BIT}, 
      #{isEmergencyAuth,jdbcType=BIT}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{userStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{blackStatus,jdbcType=INTEGER}, 
      #{auditTime,jdbcType=TIMESTAMP}, #{cashBlackStatus,jdbcType=INTEGER}, #{cashQuota,jdbcType=DECIMAL}, 
      #{frozenCashQuota,jdbcType=DECIMAL}, #{creditQuota,jdbcType=DECIMAL}, #{frozenCreditQuota,jdbcType=DECIMAL}, 
      #{auditStatus,jdbcType=INTEGER}, #{idCardPolice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.laidu.learn.mybatis.model.AppUser">
    insert into ca_app_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="registerChannel != null">
        register_channel,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idCardDetailAddress != null">
        id_card_detail_address,
      </if>
      <if test="isVerifyIdCard != null">
        is_verify_id_card,
      </if>
      <if test="idCardCoverup != null">
        id_card_coverup,
      </if>
      <if test="idCardCoverdown != null">
        id_card_coverdown,
      </if>
      <if test="idCardHold != null">
        id_card_hold,
      </if>
      <if test="isOtherPictureAuth != null">
        is_other_picture_auth,
      </if>
      <if test="isBankcardAuth != null">
        is_bankcard_auth,
      </if>
      <if test="signaturePic != null">
        signature_pic,
      </if>
      <if test="isAdditionalAuth != null">
        is_additional_auth,
      </if>
      <if test="isEmergencyAuth != null">
        is_emergency_auth,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="blackStatus != null">
        black_status,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="cashBlackStatus != null">
        cash_black_status,
      </if>
      <if test="cashQuota != null">
        cash_quota,
      </if>
      <if test="frozenCashQuota != null">
        frozen_cash_quota,
      </if>
      <if test="creditQuota != null">
        credit_quota,
      </if>
      <if test="frozenCreditQuota != null">
        frozen_credit_quota,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="idCardPolice != null">
        id_card_police,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="registerChannel != null">
        #{registerChannel,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCardDetailAddress != null">
        #{idCardDetailAddress,jdbcType=VARCHAR},
      </if>
      <if test="isVerifyIdCard != null">
        #{isVerifyIdCard,jdbcType=BIT},
      </if>
      <if test="idCardCoverup != null">
        #{idCardCoverup,jdbcType=VARCHAR},
      </if>
      <if test="idCardCoverdown != null">
        #{idCardCoverdown,jdbcType=VARCHAR},
      </if>
      <if test="idCardHold != null">
        #{idCardHold,jdbcType=VARCHAR},
      </if>
      <if test="isOtherPictureAuth != null">
        #{isOtherPictureAuth,jdbcType=BIT},
      </if>
      <if test="isBankcardAuth != null">
        #{isBankcardAuth,jdbcType=BIT},
      </if>
      <if test="signaturePic != null">
        #{signaturePic,jdbcType=VARCHAR},
      </if>
      <if test="isAdditionalAuth != null">
        #{isAdditionalAuth,jdbcType=BIT},
      </if>
      <if test="isEmergencyAuth != null">
        #{isEmergencyAuth,jdbcType=BIT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="blackStatus != null">
        #{blackStatus,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashBlackStatus != null">
        #{cashBlackStatus,jdbcType=INTEGER},
      </if>
      <if test="cashQuota != null">
        #{cashQuota,jdbcType=DECIMAL},
      </if>
      <if test="frozenCashQuota != null">
        #{frozenCashQuota,jdbcType=DECIMAL},
      </if>
      <if test="creditQuota != null">
        #{creditQuota,jdbcType=DECIMAL},
      </if>
      <if test="frozenCreditQuota != null">
        #{frozenCreditQuota,jdbcType=DECIMAL},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="idCardPolice != null">
        #{idCardPolice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.laidu.learn.mybatis.model.AppUser">
    update ca_app_user
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="registerChannel != null">
        register_channel = #{registerChannel,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCardDetailAddress != null">
        id_card_detail_address = #{idCardDetailAddress,jdbcType=VARCHAR},
      </if>
      <if test="isVerifyIdCard != null">
        is_verify_id_card = #{isVerifyIdCard,jdbcType=BIT},
      </if>
      <if test="idCardCoverup != null">
        id_card_coverup = #{idCardCoverup,jdbcType=VARCHAR},
      </if>
      <if test="idCardCoverdown != null">
        id_card_coverdown = #{idCardCoverdown,jdbcType=VARCHAR},
      </if>
      <if test="idCardHold != null">
        id_card_hold = #{idCardHold,jdbcType=VARCHAR},
      </if>
      <if test="isOtherPictureAuth != null">
        is_other_picture_auth = #{isOtherPictureAuth,jdbcType=BIT},
      </if>
      <if test="isBankcardAuth != null">
        is_bankcard_auth = #{isBankcardAuth,jdbcType=BIT},
      </if>
      <if test="signaturePic != null">
        signature_pic = #{signaturePic,jdbcType=VARCHAR},
      </if>
      <if test="isAdditionalAuth != null">
        is_additional_auth = #{isAdditionalAuth,jdbcType=BIT},
      </if>
      <if test="isEmergencyAuth != null">
        is_emergency_auth = #{isEmergencyAuth,jdbcType=BIT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="blackStatus != null">
        black_status = #{blackStatus,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cashBlackStatus != null">
        cash_black_status = #{cashBlackStatus,jdbcType=INTEGER},
      </if>
      <if test="cashQuota != null">
        cash_quota = #{cashQuota,jdbcType=DECIMAL},
      </if>
      <if test="frozenCashQuota != null">
        frozen_cash_quota = #{frozenCashQuota,jdbcType=DECIMAL},
      </if>
      <if test="creditQuota != null">
        credit_quota = #{creditQuota,jdbcType=DECIMAL},
      </if>
      <if test="frozenCreditQuota != null">
        frozen_credit_quota = #{frozenCreditQuota,jdbcType=DECIMAL},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="idCardPolice != null">
        id_card_police = #{idCardPolice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.laidu.learn.mybatis.model.AppUser">
    update ca_app_user
    set open_id = #{openId,jdbcType=VARCHAR},
      register_channel = #{registerChannel,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      id_card_detail_address = #{idCardDetailAddress,jdbcType=VARCHAR},
      is_verify_id_card = #{isVerifyIdCard,jdbcType=BIT},
      id_card_coverup = #{idCardCoverup,jdbcType=VARCHAR},
      id_card_coverdown = #{idCardCoverdown,jdbcType=VARCHAR},
      id_card_hold = #{idCardHold,jdbcType=VARCHAR},
      is_other_picture_auth = #{isOtherPictureAuth,jdbcType=BIT},
      is_bankcard_auth = #{isBankcardAuth,jdbcType=BIT},
      signature_pic = #{signaturePic,jdbcType=VARCHAR},
      is_additional_auth = #{isAdditionalAuth,jdbcType=BIT},
      is_emergency_auth = #{isEmergencyAuth,jdbcType=BIT},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      black_status = #{blackStatus,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      cash_black_status = #{cashBlackStatus,jdbcType=INTEGER},
      cash_quota = #{cashQuota,jdbcType=DECIMAL},
      frozen_cash_quota = #{frozenCashQuota,jdbcType=DECIMAL},
      credit_quota = #{creditQuota,jdbcType=DECIMAL},
      frozen_credit_quota = #{frozenCreditQuota,jdbcType=DECIMAL},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      id_card_police = #{idCardPolice,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.laidu.learn.mybatis.model.AppUser">
    update ca_app_user
    set open_id = #{openId,jdbcType=VARCHAR},
      register_channel = #{registerChannel,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      id_card_detail_address = #{idCardDetailAddress,jdbcType=VARCHAR},
      is_verify_id_card = #{isVerifyIdCard,jdbcType=BIT},
      id_card_coverup = #{idCardCoverup,jdbcType=VARCHAR},
      id_card_coverdown = #{idCardCoverdown,jdbcType=VARCHAR},
      id_card_hold = #{idCardHold,jdbcType=VARCHAR},
      is_other_picture_auth = #{isOtherPictureAuth,jdbcType=BIT},
      is_bankcard_auth = #{isBankcardAuth,jdbcType=BIT},
      signature_pic = #{signaturePic,jdbcType=VARCHAR},
      is_additional_auth = #{isAdditionalAuth,jdbcType=BIT},
      is_emergency_auth = #{isEmergencyAuth,jdbcType=BIT},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      black_status = #{blackStatus,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      cash_black_status = #{cashBlackStatus,jdbcType=INTEGER},
      cash_quota = #{cashQuota,jdbcType=DECIMAL},
      frozen_cash_quota = #{frozenCashQuota,jdbcType=DECIMAL},
      credit_quota = #{creditQuota,jdbcType=DECIMAL},
      frozen_credit_quota = #{frozenCreditQuota,jdbcType=DECIMAL},
      audit_status = #{auditStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="org.laidu.learn.mybatis.model.AppUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ca_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="org.laidu.learn.mybatis.model.AppUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ca_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectOneByExample" parameterType="org.laidu.learn.mybatis.model.AppUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from ca_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleWithBLOBs" parameterType="org.laidu.learn.mybatis.model.AppUserExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ca_app_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>